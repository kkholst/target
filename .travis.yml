language: generic

jobs:
  include:
    # --------------------------------------------------------------------------------

    - name: "python: source"
      language: python
      if: (branch IN (deploy)) OR (tag =~ ^py:v)
      cache: pip
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
      install:
        - pip3 install pytest pytest-runner pytest-cov scipy patsy numpy pandas statsmodels
      script:
        - cd python-package
        - python3 setup.py install
        - python3 setup.py test
        - bin/test_targeted
        - python3 -m targeted
      after_success:
        # if the release was tagged, upload them to PyPI
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 setup.py sdist
          python3 -m pip install twine
          python3 -m twine upload dist/*.tar.gz
          fi
          
    # --------------------------------------------------------------------------------

    - name: "python: linux wheels"
      # Only run on deploy branch or commits tagged 'py:v...'
      if: (branch IN (deploy)) OR (tag =~ ^py:v)
      services: docker
      language: python      
      install:
        - python3 -m pip install cibuildwheel==1.3.0
      env:
        - CIBW_SKIP="cp27-* cp35-*"
        - CIBW_BEFORE_BUILD="yum install -y make lapack-devel blas-devel python-devel; pip install cmake; cd lib/armadillo; cmake -B build && cd build; make install; cd ../../.."
      script:
        - make exportpy
        - cd build/python; python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        # if the release was tagged, upload them to PyPI
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 -m pip install twine
          python3 -m twine upload wheelhouse/*.whl
          fi

    # --------------------------------------------------------------------------------
   
    - name: "python: osx wheels"
      if: (branch IN (deploy)) OR (tag =~ ^py:v)
      os: osx
      language: shell
      install:
        - python3 -m pip install cibuildwheel==1.3.0
      env:
        - CIBW_SKIP="cp27-* cp35-*"
        - CIBW_BEFORE_BUILD="pip install cmake"
      script:
        - make exportpy
        - cd build/python; python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        # if the release was tagged, upload them to PyPI
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 -m pip install twine
          python3 -m twine upload wheelhouse/*.whl
          fi

    # --------------------------------------------------------------------------------
         
    # - name: "Python: windows wheels"
    #   os: windows
    #   language: shell
    #   before_install:
    #     - choco install python --version 3.8.0
    #     - choco install make
    #     - choco install cmake
    #     - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
    #   install:
    #     - python -m pip install cibuildwheel==1.3.0
    #   script:
    #     - make exportpy
    #     - cp lib/armadillo/examples/lib_win64/* lib/armadillo/
    #     - cd build/python; CIBW_SKIP="cp27-* cp35-* cp36-* cp37-*"
    #   python -m cibuildwheel --output-dir wheelhouse

    # --------------------------------------------------------------------------------

    - name: "C++ library"
      language: cpp
      compiler:
        - clang
        - gcc
      cache: ccache
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
      script:
        - make init
        - make test

    # --------------------------------------------------------------------------------

    - name: "R: targeted"
      language: r
      r: release
      warnings_are_errors: true
      cache:
        packages: true
        ccache: true
      r_binary_packages:
        - covr
        - futile.logger
        - lava
        - optimx
        - rcpp
        - rcpparmadillo
        - testthat
      script:
        - make checkr pkg=targeted

    # --------------------------------------------------------------------------------

    - name: "R: gof"
      language: r
      r: release
      warnings_are_errors: true
      cache:
        packages: true
        ccache: true
      r_binary_packages:
        - covr
        - futile.logger
        - lava
        - optimx
        - rcpp
        - rcpparmadillo
        - testthat
      script:
        - make checkr pkg=gof

    # --------------------------------------------------------------------------------

    - name: "Python: targeted"
      language: python
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
      cache: pip            
      install:
        - pip3 install pytest pytest-runner pytest-cov scipy patsy numpy pandas statsmodels            
      script:
        - cd python-package
        - python3 setup.py install
        - python3 setup.py test
        - bin/test_targeted
        - python3 -m targeted

    # --------------------------------------------------------------------------------

