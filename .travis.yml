language: generic

jobs:
  include:
    # --------------------------------------------------------------------------------

    - name: "python: source"
      language: python
      # Only run on deploy branch or commits tagged 'py_v...'
      if: (branch IN (deploy)) OR (tag =~ ^py_v)
      cache: pip
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
      install:
        - pip3 install pytest pytest-runner pytest-cov scipy patsy numpy pandas statsmodels
      script:
        - cd python-package
        - python3 setup.py install
        - python3 setup.py test
        - bin/test_targeted
        - python3 -m targeted
      after_success:
        # if the release was tagged, upload them to PyPI
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 setup.py sdist
          python3 -m pip install twine
          python3 -m twine upload dist/*.tar.gz
          fi

    # --------------------------------------------------------------------------------

    - name: "python: linux wheels"
      if: (branch IN (deploy)) OR (tag =~ ^py_v)
      services: docker
      language: python
      install:
        - python3 -m pip install cibuildwheel==1.3.0
      env:
        - CIBW_SKIP="cp27-* cp35-*"
        - CIBW_BEFORE_BUILD="yum install -y make lapack-devel blas-devel python-devel; pip install cmake; cd lib/armadillo; cmake -B build && cd build; make install; cd ../../.."
      script:
        - make exportpy
        - cd build/python; python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 -m pip install twine
          python3 -m twine upload wheelhouse/*.whl
          fi

    # --------------------------------------------------------------------------------

    - name: "python: osx wheels"
      if: (branch IN (deploy)) OR (tag =~ ^py_v)
      os: osx
      language: shell
      install:
        - python3 -m pip install cibuildwheel==1.3.0
      env:
        - CIBW_SKIP="cp27-* cp35-*"
        - CIBW_BEFORE_BUILD="pip install cmake"
      script:
        - make exportpy
        - cd build/python; python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 -m pip install twine
          python3 -m twine upload wheelhouse/*.whl
          fi

    # --------------------------------------------------------------------------------

    # - name: "Python: windows wheels"
    #   os: windows
    #   language: shell
    #   before_install:
    #     - choco install python --version 3.8.0
    #     - choco install make
    #     - choco install cmake
    #     - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
    #   install:
    #     - python -m pip install cibuildwheel==1.3.0
    #   script:
    #     - make exportpy
    #     - cp lib/armadillo/examples/lib_win64/* lib/armadillo/
    #     - cd build/python; CIBW_SKIP="cp27-* cp35-* cp36-* cp37-*"
    #   python -m cibuildwheel --output-dir wheelhouse

    # --------------------------------------------------------------------------------

    # - name: "C++ library (clang, osx)"
    #   os: osx
    #   language: cpp
    #   compiler: clang
    #   cache:
    #     - ccache: true
    #   script:
    #     - make test

    - name: "C++ library (clang)"
      language: cpp
      compiler: clang
      cache:
        - ccache: true
        - apt: true
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
      script:
        - make test

    - name: "C++ library (gcc)"
      language: cpp
      compiler: gcc
      cache:
        - ccache: true
        - apt: true
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
            - lcov
      script:
        - make coverage
        - cd build/coverage; make coverage
        - ./target_test -s
      after_success:
        - bash <(curl -s https://codecov.io/bash)

    # --------------------------------------------------------------------------------

    - name: "R: targeted"
      language: r
      r: release
      warnings_are_errors: true
      cache:
        packages: true
        ccache: true
        apt: true
      addons:
        apt:
          packages:
            - r-cran-covr
            - r-cran-futile.logger
            - r-cran-knitr
            - r-cran-lava
            - r-cran-numderiv
            - r-cran-optimx
            - r-cran-rcpp
            - r-cran-rcpparmadillo
            - r-cran-testthat
            - r-cran-pkgdown
      r_packages:
        - covr
      install:
        - echo
      script:
        - make checkr pkg=targeted
      after_success:
        - Rscript -e 'covr::codecov(path="R-package/targeted", type="all")'
        - Rscript -e 'pkgdown::build_site("R-package/targeted")'
      deploy:
        provider: pages
        skip-cleanup: true
        github-token: $GITHUB_TOKEN
        keep-history: true
        local-dir: R-packages/targeted/docs
        on:
          branch: master

    # --------------------------------------------------------------------------------

    - name: "R: gof"
      language: r
      r: release
      warnings_are_errors: true
      cache:
        packages: true
        ccache: true
        apt: true
      addons:
        apt:
          packages:
            - r-cran-covr
            - r-cran-futile.logger
            - r-cran-lava
            - r-cran-numderiv
            - r-cran-rcpp
            - r-cran-rcpparmadillo
            - r-cran-testthat
      r_packages:
        - covr
      install:
        - echo
      script:
        - make checkr pkg=gof
      after_success:
        - Rscript -e 'library("covr"); codecov(path="R-package/gof", flags="gof", type="all")'

    # --------------------------------------------------------------------------------

    - name: "Python: targeted"
      language: python
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
      cache:
        - pip: true
        - apt: true
      install:
        - pip3 install pytest pytest-runner pytest-cov scipy patsy numpy pandas statsmodels codecov
      script:
        - cd python-package
        - python3 setup.py install
        - python3 -m targeted
        - pytest --cov=targeted tests/
        - bin/test_targeted
      after_success:
        - codecov

    # --------------------------------------------------------------------------------


notifications:
  slack:
    secure: cdMbTUvOkgXJz7M5005t27XxfVOOerWfCl8q5SIOTn8q91uOxoi29O3JewimUAsKIi8SyarD5HFt09CRViQL01tQiEEFcoKZ2VzJ4lhB2U3icW+f755ZbGDso8hgQfyCQbsu3v3u+c7UqnfdHT7KubfC2G8rX7LKcJmksLolt5NWOUPX1v6D0HzIDXUfz/a9231FiY3C5QGjGc71q8ZfwdTQhckHY2iSs/0usEunJzAu2Miqft07KpuYpjNavSlfuEZGEp0tKqUTh3+O+wnnpyyzsW2/qC2x2sORpij9A/h+thazUC7zJjqsV+8MiDEIh5wj4NsiC5/zhuGkHZZur2jOeab46OenELZlb7ppQUrTYeYGGt7gXziQndJtMWokoLow/N+aDEv0M0Lg/Ua8y/4TggK2zETjIvME2lukvF568XklPlLq8zUaZQMwDkNl273Y0aPxSJcdN0qQL7/X8aPLoneUoEdaO4SJHEWbGexPNMQhOSnoAUtln8kuiLYZMaIaTAynFoG7R5Bv3DUOqa3ESZ+wYWqrrnYhFfl9zEmERF78fhhDGX78H/hVrp/2ltX9o7g2fnDWr/AmtsQyzHn3L0JO7Nyz57toIT1LddXQDWF8wuKeMguMi6HtEoNdiPADnLsxDc+7MjVhgKIJ82Cvzg8yOQanYO9dKJeTYJ0
