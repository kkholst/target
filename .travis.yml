language: python      

jobs:
  include:
    # --------------------------------------------------------------------------------
    - services: docker
      name: "linux wheels"
      install:
        - python3 -m pip install cibuildwheel==1.3.0
      script:
        - make exportpy
        - cd build/python; CIBW_SKIP="cp27-* cp35-*" CIBW_BEFORE_BUILD="yum install -y make lapack-devel git blas-devel SuperLU-devel python-devel; pip install cmake" python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        # if the release was tagged, upload them to PyPI
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 -m pip install twine
          python3 -m twine upload wheelhouse/*.whl
          fi

    # --------------------------------------------------------------------------------

    - name: "osx wheels"
      os: osx
      language: shell
      install:
        - python3 -m pip install cibuildwheel==1.3.0
      script:
        - make exportpy
        - cd build/python; CIBW_SKIP="cp27-* cp35-*" CIBW_BEFORE_BUILD="pip install cmake" python3 -m cibuildwheel --output-dir wheelhouse
      after_success:
        # if the release was tagged, upload them to PyPI
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 -m pip install twine
          python3 -m twine upload wheelhouse/*.whl
          fi

    # --------------------------------------------------------------------------------

    # - name: "Python: windows wheels"
    #   os: windows
    #   language: shell
    #   before_install:
    #     - choco install python --version 3.8.0
    #     - choco install make
    #     - choco install cmake
    #     - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
    #   install:
    #     - python -m pip install cibuildwheel==1.3.0
    #   script:
    #     - make exportpy
    #     - cp lib/armadillo/examples/lib_win64/* lib/armadillo/
    #     - cd build/python; CIBW_SKIP="cp27-* cp35-* cp36-* cp37-*"
    #   python -m cibuildwheel --output-dir wheelhouse

    # --------------------------------------------------------------------------------

    - name: "C++ library"
      language: cpp
      compiler:
        - clang
        - gcc
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
      script:
        - make init
        - make test

    # --------------------------------------------------------------------------------

    - name: "R: targeted"
      language: r
      r: release
      warnings_are_errors: true
      cache: packages
      addons:
        apt:
          packages:
            - r-cran-covr
            - r-cran-futile.logger
            - r-cran-lava
            - r-cran-optimx
            - r-cran-rcpp
            - r-cran-rcpparmadillo
            - r-cran-testthat
      install:
        - echo
      script:
        - make checkr pkg=targeted

    # --------------------------------------------------------------------------------

    - name: "R: gof"
      language: r
      r: release
      warnings_are_errors: true
      cache: packages
      addons:
        apt:
          packages:
            - r-cran-covr
            - r-cran-futile.logger
            - r-cran-lava
            - r-cran-numderiv
            - r-cran-rcpp
            - r-cran-rcpparmadillo
            - r-cran-testthat
      install:
        - echo
      script:
        - make checkr pkg=gof

    # --------------------------------------------------------------------------------

    - name: "Python: release"
      language: python
      addons:
        apt:
          packages:
            - cmake
            - liblapack-dev
            - libblas-dev
            - python3-scipy
            - python3-pytest
            - python3-patsy
            - python3-numpy
            - python3-pandas
            - python3-numpy
      install:
        - pip3 install pytest-runner pytest-cov
      script:
        - cd python-package
        - python3 setup.py install
        - python3 setup.py test
        - bin/test_targeted
        - python3 -m targeted
      after_success:
        # if the release was tagged, upload them to PyPI
        - |
          if [[ $TRAVIS_TAG ]]; then
          python3 setup.py sdist
          python3 -m pip install twine
          python3 -m twine upload dist/*.tar.gz
          fi

    # --------------------------------------------------------------------------------

env:
  global:
    # - TWINE_USERNAME=__token__
